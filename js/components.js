/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±—â–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã header –∏ footer
 */

class ComponentLoader {
    constructor() {
        this.components = new Map();
        this.initBuiltInComponents();
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
     */
    initBuiltInComponents() {
        // Header –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
        const headerHTML = `
            <nav class="navbar">
                <div class="nav-container">
                    <a href="index.html" class="nav-logo">
                        <i class="fas fa-brain"></i>
                        <span>AI Coding</span>
                    </a>
                    <div class="nav-menu">
                        <a href="index.html" class="nav-link" data-page="home">‘≥’¨’≠’°’æ’∏÷Ä</a>
                        <a href="module1.html" class="nav-link" data-page="module1">AI Explorer</a>
                        <a href="module2.html" class="nav-link" data-page="module2">AI Developer</a>
                        <a href="module3.html" class="nav-link" data-page="module3">AI Product Engineer</a>
                        <a href="contact.html" class="nav-link" data-page="contact">‘ø’°’∫</a>
                    </div>
                    <div class="hamburger" id="mobile-menu-toggle">
                        <span></span>
                        <span></span>
                        <span></span>
                    </div>
                </div>
            </nav>
            
            <!-- Mobile Menu Overlay -->
            <div class="mobile-menu-overlay" id="mobile-menu-overlay">
                <div class="mobile-menu-content">
                    <div class="mobile-menu-header">
                        <div class="mobile-menu-logo">
                            <i class="fas fa-brain"></i>
                            <span>AI Coding</span>
                        </div>
                        <button class="mobile-menu-close" id="mobile-menu-close">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    
                    <nav class="mobile-menu-nav">
                        <a href="index.html" class="mobile-menu-link" data-page="home">
                            <i class="fas fa-home"></i>
                            <span>‘≥’¨’≠’°’æ’∏÷Ä</span>
                        </a>
                        <a href="module1.html" class="mobile-menu-link" data-page="module1">
                            <i class="fas fa-search"></i>
                            <span>AI Explorer</span>
                        </a>
                        <a href="module2.html" class="mobile-menu-link" data-page="module2">
                            <i class="fas fa-code"></i>
                            <span>AI Developer</span>
                        </a>
                        <a href="module3.html" class="mobile-menu-link" data-page="module3">
                            <i class="fas fa-rocket"></i>
                            <span>AI Product Engineer</span>
                        </a>
                        <a href="contact.html" class="mobile-menu-link" data-page="contact">
                            <i class="fas fa-envelope"></i>
                            <span>‘ø’°’∫</span>
                        </a>
                    </nav>
                    
                    <div class="mobile-menu-footer">
                        <a href="https://wa.me/37444343000?text=‘≤’°÷Ä÷á%21%20’ë’°’∂’Ø’°’∂’∏÷Ç’¥%20’•’¥%20’£÷Ä’°’∂÷Å’æ’•’¨%20AI%20Coding%20’§’°’Ω’®’∂’©’°÷Å’´%20’∞’°’¥’°÷Ä%20÷á%20’Ω’Ø’Ω’•’¨%20’Ω’∏’æ’∏÷Ä’•’¨%20’Æ÷Ä’°’£÷Ä’°’æ’∏÷Ä’∏÷Ç’¥%20AI-’´%20÷Ö’£’∂’∏÷Ç’©’µ’°’¥’¢%20üöÄ" target="_blank" class="mobile-menu-cta">
                            <i class="fab fa-whatsapp"></i>
                            <span>’ç’Ø’Ω’•’¨ ’∞’´’¥’°</span>
                        </a>
                    </div>
                </div>
            </div>
        `;

        // Footer –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
        const footerHTML = `
            <footer class="footer">
                <div class="container">
                    <div class="footer-content">
                        <a href="index.html" class="footer-logo">
                            <i class="fas fa-brain"></i>
                            <span>AI Coding</span>
                        </a>
                        <div class="footer-links">
                            <a href="index.html">‘≥’¨’≠’°’æ’∏÷Ä</a>
                            <a href="module1.html">AI Explorer</a>
                            <a href="module2.html">AI Developer</a>
                            <a href="module3.html">AI Product Engineer</a>
                        </div>
                        <div class="footer-social">
                            <a href="#" aria-label="Facebook"><i class="fab fa-facebook"></i></a>
                            <a href="#" aria-label="Instagram"><i class="fab fa-instagram"></i></a>
                            <a href="#" aria-label="LinkedIn"><i class="fab fa-linkedin"></i></a>
                            <a href="#" aria-label="YouTube"><i class="fab fa-youtube"></i></a>
                        </div>
                    </div>
                    <div class="footer-bottom">
                        <p>&copy; 2024 AI Coding. ‘≤’∏’¨’∏÷Ä ’´÷Ä’°’æ’∏÷Ç’∂÷Ñ’∂’•÷Ä’® ’∫’°’∑’ø’∫’°’∂’æ’°’Æ ’•’∂:</p>
                    </div>
                </div>
            </footer>
        `;

        this.components.set('header', headerHTML);
        this.components.set('footer', footerHTML);
    }

    /**
     * –í—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
     * @param {string} componentName - –ò–º—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
     * @param {string} selector - CSS —Å–µ–ª–µ–∫—Ç–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞
     */
    insertComponent(componentName, selector) {
        const element = document.querySelector(selector);
        if (element && this.components.has(componentName)) {
            element.innerHTML = this.components.get(componentName);
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    initComponents() {
        console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...');
        
        // –í—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        this.insertComponent('header', '#header-container');
        this.insertComponent('footer', '#footer-container');

        console.log('‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ');
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
        this.initNavigation();
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏—é –∏ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å—Å—ã–ª–∫–∏
     */
    initNavigation() {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        const currentPage = this.getCurrentPage();
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å—Å—ã–ª–∫—É
        const navLinks = document.querySelectorAll('.nav-link');
        navLinks.forEach(link => {
            const page = link.getAttribute('data-page');
            if (page === currentPage) {
                link.classList.add('active');
            } else {
                link.classList.remove('active');
            }
        });

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
        this.initMobileMenu();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–ª–∞–≤–Ω—É—é –ø—Ä–æ–∫—Ä—É—Ç–∫—É
        this.initSmoothScrolling();
    }

    /**
     * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ URL
     * @returns {string} –ò–º—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    getCurrentPage() {
        const path = window.location.pathname;
        const filename = path.split('/').pop();
        
        switch (filename) {
            case 'module1.html':
                return 'module1';
            case 'module2.html':
                return 'module2';
            case 'module3.html':
                return 'module3';
            case 'contact.html':
                return 'contact';
            case 'index.html':
            case '':
                return 'home';
            default:
                return 'home';
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
     */
    initMobileMenu() {
        const hamburger = document.getElementById('mobile-menu-toggle');
        const mobileMenuOverlay = document.getElementById('mobile-menu-overlay');
        const mobileMenuClose = document.getElementById('mobile-menu-close');
        const mobileMenuLinks = document.querySelectorAll('.mobile-menu-link');

        if (hamburger && mobileMenuOverlay) {
            // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é
            hamburger.addEventListener('click', () => {
                this.openMobileMenu();
            });

            // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é
            mobileMenuClose.addEventListener('click', () => {
                this.closeMobileMenu();
            });

            // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –æ–≤–µ—Ä–ª–µ–π
            mobileMenuOverlay.addEventListener('click', (e) => {
                if (e.target === mobileMenuOverlay) {
                    this.closeMobileMenu();
                }
            });

            // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Å—ã–ª–∫—É
            mobileMenuLinks.forEach(link => {
                link.addEventListener('click', () => {
                    this.closeMobileMenu();
                });
            });

            // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ Escape
            document.addEventListener('keydown', (e) => {
                if (e.key === 'Escape' && mobileMenuOverlay.classList.contains('active')) {
                    this.closeMobileMenu();
                }
            });
        }
    }

    /**
     * –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
     */
    openMobileMenu() {
        const mobileMenuOverlay = document.getElementById('mobile-menu-overlay');
        const hamburger = document.getElementById('mobile-menu-toggle');
        
        if (mobileMenuOverlay) {
            mobileMenuOverlay.classList.add('active');
            hamburger.classList.add('active');
            document.body.style.overflow = 'hidden';
            
            // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫
            const links = document.querySelectorAll('.mobile-menu-link');
            links.forEach((link, index) => {
                setTimeout(() => {
                    link.style.opacity = '1';
                    link.style.transform = 'translateX(0)';
                }, index * 100);
            });
        }
    }

    /**
     * –ó–∞–∫—Ä—ã–≤–∞–µ—Ç –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
     */
    closeMobileMenu() {
        const mobileMenuOverlay = document.getElementById('mobile-menu-overlay');
        const hamburger = document.getElementById('mobile-menu-toggle');
        
        if (mobileMenuOverlay) {
            mobileMenuOverlay.classList.remove('active');
            hamburger.classList.remove('active');
            document.body.style.overflow = '';
            
            // –°–±—Ä–æ—Å –∞–Ω–∏–º–∞—Ü–∏–∏ —Å—Å—ã–ª–æ–∫
            const links = document.querySelectorAll('.mobile-menu-link');
            links.forEach(link => {
                link.style.opacity = '0';
                link.style.transform = 'translateX(30px)';
            });
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–ª–∞–≤–Ω—É—é –ø—Ä–æ–∫—Ä—É—Ç–∫—É –¥–ª—è —è–∫–æ—Ä–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
     */
    initSmoothScrolling() {
        const navLinks = document.querySelectorAll('.nav-link[href^="#"]');
        
        navLinks.forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                const targetId = this.getAttribute('href');
                const targetSection = document.querySelector(targetId);
                
                if (targetSection) {
                    const offsetTop = targetSection.offsetTop - 80; // –£—á–∏—Ç—ã–≤–∞–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é
                    window.scrollTo({
                        top: offsetTop,
                        behavior: 'smooth'
                    });
                }
            });
        });
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
window.componentLoader = new ComponentLoader();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', () => {
    window.componentLoader.initComponents();
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = ComponentLoader;
}
